@model SysPet.Models.UsuariosViewModel

@{
    ViewData["Title"] = "Create";
}

@try
{
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Crear Usuario</h4>
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-outline mb-4">
                        <label asp-for="Nombre" class="control-label col-md-6 col-md-6"></label>
                        <input asp-for="Nombre" class="form-control form-control-lg form-control form-control-lg-lg" />
                        <span asp-validation-for="Nombre" class="text-danger"></span>
                    </div>
                    <div class="form-outline mb-4">
                        @Html.LabelFor(m => m.Email, new { @class = "control-label col-md-6 col-md-6" })
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-lg form-control form-control-lg-lg", type = "email" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-outline mb-4">
                        @Html.LabelFor(m => m.Contrasenia, new { @class = "control-label col-md-6 col-md-6" })
                        @Html.PasswordFor(m => m.Contrasenia, new { @class = "form-control form-control-lg form-control form-control-lg-lg" })
                        @Html.ValidationMessageFor(m => m.Contrasenia, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-outline mb-4">
                        @Html.LabelFor(model => model.IdRol, "Rol", new { @class = "control-label col-md-6 col-md-6" })
                        @Html.DropDownListFor(model => model.IdRol, Model.Roles,"Seleccionar un rol", new { @class = "form-control form-control-lg form-control form-control-lg-lg" })
                        @Html.ValidationMessageFor(model => model.IdRol)
                    </div>
                    <div class="pt-1 mb-4 button-section-create">

                        <button type="submit" class="btn btn-outline-success btn-lg btn-block btn-custom-color-success btn-custom-f">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-floppy" viewBox="0 0 16 16">
                                <path d="M11 2H9v3h2V2Z" />
                                <path d="M1.5 0h11.586a1.5 1.5 0 0 1 1.06.44l1.415 1.414A1.5 1.5 0 0 1 16 2.914V14.5a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 14.5v-13A1.5 1.5 0 0 1 1.5 0ZM1 1.5v13a.5.5 0 0 0 .5.5H2v-4.5A1.5 1.5 0 0 1 3.5 9h9a1.5 1.5 0 0 1 1.5 1.5V15h.5a.5.5 0 0 0 .5-.5V2.914a.5.5 0 0 0-.146-.353l-1.415-1.415A.5.5 0 0 0 13.086 1H13v4.5A1.5 1.5 0 0 1 11.5 7h-7A1.5 1.5 0 0 1 3 5.5V1H1.5a.5.5 0 0 0-.5.5Zm3 4a.5.5 0 0 0 .5.5h7a.5.5 0 0 0 .5-.5V1H4v4.5ZM3 15h10v-4.5a.5.5 0 0 0-.5-.5h-9a.5.5 0 0 0-.5.5V15Z" />
                            </svg>
                            Guardar
                        </button>
                        <a class="btn btn-outline-danger btn-lg btn-block btn-custom-color-delete btn-custom-f" href="@Url.Action("Index", "User", new {})">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-square" viewBox="0 0 16 16">
                                <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z" />
                                <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
                            </svg>
                            Cancelar
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>

}
catch (Exception ex)
{
    <p>Error: @ex.Message</p>
}



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
